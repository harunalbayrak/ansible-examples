---
- name: VM initialization
  hosts: all
  become: yes
  become_user: root
  tasks:
    - name: Add the 'stack' user for devstack
      user:
        name: stack
        comment: Dev stack user
        shell: /bin/bash
        # Definition of a custom user HOME directory, according to the DevStack recommendation
        home: /opt/stack

    - name: Make 'stack' a privileged user
      copy:
        content: 'stack ALL=(ALL) NOPASSWD: ALL'
        dest: /etc/sudoers.d/stack
        mode: 0440

    # Without the `acl` package you may (and probably will) experience permission related issues
    - name: Install acl to fix unprivileged user error
      package:
        name: acl
        state: present

    # DevStack scripts uses `python` directly to system has to ensure `python` command availability and map it to the Python 3
    - name: Install python-is-python3 to ensures that python means python3
      package:
        name: python-is-python3
        state: present

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day

    - name: Install packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - iptables
        - arptables
        - ebtables

    - name: Run commands
      command: "{{ item }}"
      loop:
        - "update-alternatives --set iptables /usr/sbin/iptables-legacy"
        - "update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy"
        - "update-alternatives --set arptables /usr/sbin/arptables-legacy"
        - "update-alternatives --set ebtables /usr/sbin/ebtables-legacy"

- name: DevStack setup as 'stack' user
  hosts: all
  become: yes
  become_user: stack
  tasks:
    - name: Git config ssl verify
      command: git config --global http.sslVerify "false"

    - name: Clone devstack
      git:
        repo: https://opendev.org/openstack/devstack
        dest: /opt/stack/devstack
        version: "{{ openstack_branch }}"
      environment:
        - GIT_SSL_NO_VERIFY: "true"

    - name: Copy file with configuration
      copy:
        src: "../devstack/{{ local_conf_file }}"
        dest: "/opt/stack/devstack/local.conf"

    - name: Test if DevStack is installed by checking /opt/stack/tempest existence
      shell:
        # According to the https://docs.openstack.org/devstack/victoria#profit
        # /opt/stack/tempest dir should exist after devstack installation is completed
        # this is not an ideal way of testing but at least it is something
        cmd: 'test -d "/opt/stack/tempest" && echo "yes" || echo "no"'
      # Save command result to Ansible variable
      register: is_devstack_installed
      ignore_errors: true

    - debug: var=is_devstack_installed

    - name: Install devstack, this step may take up to 30 minutes or even more
      # Use Ansible variable to check if installation should be executed
      when: is_devstack_installed.stdout == "no"
      shell:
        chdir: /opt/stack/devstack
        cmd: ./stack.sh
      register: devstack_output

    - debug: var=devstack_output.stdout_lines

    - name: Pip install requirements of skyline-console
      ansible.builtin.pip:
        requirements: /opt/stack/skyline-console/requirements.txt

    - name: Pip install requirements of skyline-apiserver
      ansible.builtin.pip:
        requirements: /opt/stack/skyline-apiserver/requirements.txt
      notify:
        - Restart devstack@skyline.service

  handlers:
    - name: Restart devstack@skyline.service
      become_user: root
      service: name=devstack@skyline.service state=restarted
